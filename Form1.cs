using System;
using System.Windows.Forms;

//The C# API can be re-downloaded at https://wearedevs.net/d/Exploit%20API
//Make sure it is added as a reference if you decide to re-download
using WeAreDevs_API;

//The exploit itself auto updates. You never need to do work yourself!
//Just create the project once and let WeAreDevs do the work for you.
//Why is this free? Its because of the non-intrusive watermark the API adds
namespace Exploit_Template_with_WRDAPIModified
{
    public partial class Form1 : Form
    {
        //Creates object so we can make calls to WeAreDevs_API.
        readonly ExploitAPI wearedevsapiisreallyepic = new ExploitAPI();
        /*To see methods you can call, go to 
        The project in the solution explorer -> References -> Right click on WeAreDevs_API.dll ->
        View in Object Browser -> WeAreDevs_API -> WeAreDevs_API -> click Exploit API.
        This will then show a list of all functions you can use!*/

        public Form1()
        {
            InitializeComponent();
        }

        //The exploit must be injected before calling any other function!
        private void BtnInject_Click(object sender, EventArgs e)
        {
            wearedevsapiisreallyepic.LaunchExploit();
        }

        //Executes the lua script
        private void BtnExecute_Click(object sender, EventArgs e)
        {
            string script = inputScript.Text;
            wearedevsapiisreallyepic.SendLuaScript(script);
        }

        private void Killplayerbutton_Click(object sender, EventArgs e)
        {
            wearedevsapiisreallyepic.SendLuaScript("game.Workspace.LocalPlayer.Head:Remove()");
        }

        private void something(object sender, EventArgs e)
        {
            string helloworldisepic = "Instance.new('Part', workspace.LocalPlayer)";
            wearedevsapiisreallyepic.SendLuaScript(helloworldisepic);
        }
		
		private void darkdexscript(object sender, EventArgs e)
		{

            wearedevsapiisreallyepic.SendLuaScript("loadstring(game:HttpGet('https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt'))()");
            wearedevsapiisreallyepic.ConsolePrint("Dex Explorer Script Executed");
        }
		
		private void infiniteyield(object sender, EventArgs e)
		{
            wearedevsapiisreallyepic.SendLuaScript("loadstring(game:HttpGet('https://cdn.wearedevs.net/scripts/Infinite%20Yield.txt'))()");
            wearedevsapiisreallyepic.ConsolePrint("Infinity Yield Script Executed");
			
		}
        private void Retroify(object sender, EventArgs e)
        {
            wearedevsapiisreallyepic.SendLuaScript("loadstring(game:HttpGet('https://raw.githubusercontent.com/BeyondThe5D/Retrofiy/main/Retrofiy.lua'))()");
            wearedevsapiisreallyepic.ConsoleWarn("Retroify Executed");
        }

        //Changes UI text to say if the exploit is injected or not
        //Challenge: Try making the attach button only show if the exploit is not injected
        private void CheckInjected()
        {
            if (wearedevsapiisreallyepic.isAPIAttached())
            {
                //The exploit is injected and now ready to execute scripts/commands
                txtIsInjected.Text = "Is Injected: true";
            }
            else
            {
                //The exploit is not injected... The client must inject
                txtIsInjected.Text = "Is Injected: false";
            }
        }

        //Check if the exploit is injected on load
        private void Form1_Load(object sender, EventArgs e)
        {
            CheckInjected();
        }

        //Check if the exploit is injected every 3 seconds
        private void InjectedChecker_Tick(object sender, EventArgs e)
        {
            CheckInjected();
        }
    }
}
